# Generated by Django 3.2.24 on 2024-03-08 11:23

from django.conf import settings
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import embed_video.fields
import geotrek.common.models
import mapentity.models
import paperclip.models
import paperclip.validators
import uuid


class Migration(migrations.Migration):
    replaces = [
        ("common", "0001_initial"),
        ("common", "0002_auto_20170323_1433"),
        ("common", "0003_auto_20180608_1236"),
        ("common", "0004_attachment_creation_date"),
        ("common", "0005_auto_20191029_1110"),
        ("common", "0006_auto_20200211_1036"),
        ("common", "0007_auto_20200228_1755"),
        ("common", "0008_auto_20200228_1830"),
        ("common", "0009_auto_20200406_1356"),
        ("common", "0010_attachment_is_image"),
        ("common", "0011_attachment_add_is_image"),
        ("common", "0012_reservationsystem"),
        ("common", "0013_targetportal_title"),
        ("common", "0014_auto_20201117_1302"),
        ("common", "0015_label"),
        ("common", "0016_auto_20201217_0940"),
        ("common", "0017_auto_20210121_0943"),
        ("common", "0018_auto_20210528_1232"),
        ("common", "0019_attachment_uuid"),
        ("common", "0020_auto_20211025_1440"),
        ("common", "0021_auto_20211025_1440"),
        ("common", "0022_accessibilityattachment"),
        ("common", "0023_auto_20220405_1635"),
        ("common", "0024_auto_20220408_0933"),
        ("common", "0025_auto_20220425_1550"),
        ("common", "0026_auto_20221110_1128"),
        ("common", "0027_flush_cache_1234"),
        ("common", "0028_alter_recordsource_name"),
        ("common", "0029_hdviewpoint"),
        ("common", "0030_auto_20230202_1535"),
        ("common", "0031_auto_20230407_0947"),
        ("common", "0032_auto_20230407_1337"),
        ("common", "0033_auto_20230503_0837"),
        ("common", "0034_alter_accessibilityattachment_creator"),
        ("common", "0035_label_published"),
        ("common", "0036_accessmean"),
    ]
    initial = True

    dependencies = [
        ("authent", "0100_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("cirkwi", "0100_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AccessMean",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                ("label", models.CharField(max_length=128)),
            ],
            options={
                "verbose_name": "Access mean",
                "verbose_name_plural": "Access means",
                "ordering": ("label",),
            },
        ),
        migrations.CreateModel(
            name="Label",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                (
                    "pictogram",
                    models.FileField(
                        blank=True,
                        max_length=512,
                        null=True,
                        upload_to="upload",
                        verbose_name="Pictogram",
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Name")),
                ("advice", models.TextField(blank=True, verbose_name="Advice")),
                (
                    "published",
                    models.BooleanField(
                        default=False,
                        help_text="Visible on Geotrek-rando",
                        verbose_name="Published",
                    ),
                ),
                (
                    "filter",
                    models.BooleanField(
                        default=False,
                        help_text="Show this label as a filter in public portal",
                        verbose_name="Filter",
                    ),
                ),
            ],
            options={
                "verbose_name": "Label",
                "verbose_name_plural": "Labels",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="RecordSource",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                (
                    "pictogram",
                    models.FileField(
                        blank=True,
                        max_length=512,
                        null=True,
                        upload_to="upload",
                        verbose_name="Pictogram",
                    ),
                ),
                ("name", models.CharField(max_length=80, verbose_name="Name")),
                (
                    "website",
                    models.URLField(
                        blank=True, max_length=256, null=True, verbose_name="Website"
                    ),
                ),
            ],
            options={
                "verbose_name": "Record source",
                "verbose_name_plural": "Record sources",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ReservationSystem",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=256, unique=True, verbose_name="Name"),
                ),
            ],
            options={
                "verbose_name": "Reservation system",
                "verbose_name_plural": "Reservation systems",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="TargetPortal",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Used for sync",
                        max_length=50,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "website",
                    models.URLField(
                        max_length=256, unique=True, verbose_name="Website"
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        default="",
                        help_text="Title on Geotrek Rando",
                        max_length=50,
                        verbose_name="Title Rando",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        default="",
                        help_text="Description on Geotrek Rando",
                        verbose_name="Description",
                    ),
                ),
                (
                    "facebook_id",
                    models.CharField(
                        blank=True,
                        default="1679174029008755",
                        help_text="Facebook ID for Geotrek Rando",
                        max_length=20,
                        null=True,
                        verbose_name="Facebook ID",
                    ),
                ),
                (
                    "facebook_image_url",
                    models.CharField(
                        default="/custom/images/main.jpg",
                        help_text="Url of the facebook image",
                        max_length=256,
                        verbose_name="Facebook image url",
                    ),
                ),
                (
                    "facebook_image_width",
                    models.IntegerField(
                        default=1024,
                        help_text="Facebook image's width",
                        verbose_name="Facebook image width",
                    ),
                ),
                (
                    "facebook_image_height",
                    models.IntegerField(
                        default=682,
                        help_text="Facebook image's height",
                        verbose_name="Facebook image height",
                    ),
                ),
            ],
            options={
                "verbose_name": "Target portal",
                "verbose_name_plural": "Target portals",
                "ordering": ("name",),
            },
        ),
        migrations.CreateModel(
            name="Theme",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                (
                    "pictogram",
                    models.FileField(
                        max_length=512,
                        null=True,
                        upload_to="upload",
                        verbose_name="Pictogram",
                    ),
                ),
                ("label", models.CharField(max_length=128, verbose_name="Name")),
                (
                    "cirkwi",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="cirkwi.cirkwitag",
                        verbose_name="Cirkwi tag",
                    ),
                ),
            ],
            options={
                "verbose_name": "Theme",
                "verbose_name_plural": "Themes",
                "ordering": ["label"],
            },
        ),
        migrations.CreateModel(
            name="Organism",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                ("organism", models.CharField(max_length=128, verbose_name="Organism")),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Organism",
                "verbose_name_plural": "Organisms",
                "ordering": ["organism"],
            },
        ),
        migrations.CreateModel(
            name="License",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        max_length=128, unique=True, verbose_name="License name"
                    ),
                ),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Attachment license",
                "verbose_name_plural": "Attachment licenses",
                "ordering": ["label"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HDViewPoint",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                (
                    "picture",
                    models.FileField(upload_to="hdviewpoints/", verbose_name="Picture"),
                ),
                (
                    "geom",
                    django.contrib.gis.db.models.fields.PointField(
                        srid=settings.SRID, verbose_name="Location"
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "annotations",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Annotations"
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Original creator",
                        max_length=128,
                        verbose_name="Author",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title for this view point",
                        max_length=1024,
                        verbose_name="Title",
                    ),
                ),
                (
                    "legend",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Details about this view",
                        max_length=1024,
                        verbose_name="Legend",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "license",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.license",
                        verbose_name="License",
                    ),
                ),
            ],
            options={
                "verbose_name": "HD View",
                "verbose_name_plural": "HD Views",
                "permissions": (("read_hdviewpoint", "Can read hd view point"),),
            },
            bases=(mapentity.models.DuplicateMixin, models.Model),
        ),
        migrations.CreateModel(
            name="FileType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=128, verbose_name="File type")),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "File type",
                "verbose_name_plural": "File types",
                "ordering": ["type"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Attachment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "attachment_file",
                    models.FileField(
                        blank=True,
                        max_length=512,
                        upload_to=paperclip.models.attachment_upload,
                        validators=[paperclip.validators.FileMimetypeValidator()],
                        verbose_name="File",
                    ),
                ),
                (
                    "attachment_video",
                    embed_video.fields.EmbedVideoField(
                        blank=True, verbose_name="Video URL"
                    ),
                ),
                (
                    "attachment_link",
                    models.URLField(blank=True, verbose_name="Picture URL"),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Original creator",
                        max_length=128,
                        verbose_name="Author",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Renames the file",
                        max_length=128,
                        verbose_name="Filename",
                    ),
                ),
                (
                    "legend",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Details displayed",
                        max_length=128,
                        verbose_name="Legend",
                    ),
                ),
                (
                    "starred",
                    models.BooleanField(
                        default=False,
                        help_text="Mark as starred",
                        verbose_name="Starred",
                    ),
                ),
                (
                    "is_image",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        editable=False,
                        help_text="Is an image file",
                        verbose_name="Is image",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(auto_now=True, verbose_name="Update date"),
                ),
                (
                    "random_suffix",
                    models.CharField(blank=True, default="", max_length=128),
                ),
                (
                    "creation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Creation Date"
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="User that uploaded",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_attachments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "filetype",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.filetype",
                        verbose_name="File type",
                    ),
                ),
                (
                    "license",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="common.license",
                        verbose_name="License",
                    ),
                ),
            ],
            options={
                "verbose_name": "Attachment",
                "verbose_name_plural": "Attachments",
                "ordering": ["-date_insert"],
                "permissions": (
                    ("add_attachment", "Can add attachments"),
                    ("change_attachment", "Can change attachments"),
                    ("delete_attachment", "Can delete attachments"),
                    ("read_attachment", "Can read attachments"),
                    ("delete_attachment_others", "Can delete others' attachments"),
                ),
                "abstract": False,
                "default_permissions": (),
            },
        ),
        migrations.CreateModel(
            name="AccessibilityAttachment",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("object_id", models.PositiveIntegerField()),
                (
                    "attachment_accessibility_file",
                    models.ImageField(
                        blank=True,
                        max_length=512,
                        upload_to=geotrek.common.models.attachment_accessibility_upload,
                        validators=[paperclip.validators.FileMimetypeValidator()],
                        verbose_name="Image",
                    ),
                ),
                (
                    "info_accessibility",
                    models.CharField(
                        choices=[
                            ("slope", "Slope"),
                            ("width", "Width"),
                            ("signage", "Signage"),
                        ],
                        default="slope",
                        max_length=7,
                        verbose_name="Information accessibility",
                    ),
                ),
                (
                    "creation_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Creation Date"
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Original creator",
                        max_length=128,
                        verbose_name="Author",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Renames the file",
                        max_length=128,
                        verbose_name="Filename",
                    ),
                ),
                (
                    "legend",
                    models.CharField(
                        blank=True,
                        default="",
                        help_text="Details displayed",
                        max_length=128,
                        verbose_name="Legend",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(auto_now=True, verbose_name="Update date"),
                ),
                (
                    "random_suffix",
                    models.CharField(blank=True, default="", max_length=128),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="User that uploaded",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="created_attachments_accessibility",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Creator",
                    ),
                ),
                (
                    "license",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.license",
                        verbose_name="License",
                    ),
                ),
            ],
            options={
                "verbose_name": "Attachment accessibility",
                "verbose_name_plural": "Attachments accessibility",
                "ordering": ["-date_insert"],
                "default_permissions": (),
            },
        ),
    ]
