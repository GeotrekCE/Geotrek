# Generated by Django 3.2.24 on 2024-03-08 11:23

import datetime
import django.contrib.gis.db.models.fields
import django.contrib.postgres.indexes
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import geotrek.authent.models
import geotrek.common.mixins.models
import geotrek.zoning.mixins
import mapentity.models


class Migration(migrations.Migration):
    replaces = [
        ("maintenance", "0001_initial"),
        ("maintenance", "0002_auto_20180608_1239"),
        ("maintenance", "0003_auto_20181203_1101"),
        ("maintenance", "0004_auto_20190306_1417"),
        ("maintenance", "0005_auto_20190306_1555"),
        ("maintenance", "0006_auto_20191029_1110"),
        ("maintenance", "0007_auto_20191209_1315"),
        ("maintenance", "0008_auto_20191210_0921"),
        ("maintenance", "0009_auto_20200211_1011"),
        ("maintenance", "0010_auto_20200228_1755"),
        ("maintenance", "0011_auto_20200305_1037"),
        ("maintenance", "0012_auto_20200311_1608"),
        ("maintenance", "0013_auto_20200406_1410"),
        ("maintenance", "0014_auto_20200316_1245"),
        ("maintenance", "0015_auto_20201117_1302"),
        ("maintenance", "0016_auto_20210121_0943"),
        ("maintenance", "0017_auto_20210211_0825"),
        ("maintenance", "0018_interventionjob_active"),
        ("maintenance", "0019_auto_20220127_1005"),
        ("maintenance", "0020_auto_20230407_0947"),
        ("maintenance", "0021_auto_20230407_1337"),
        ("maintenance", "0022_auto_20230503_0837"),
        ("maintenance", "0023_intervention_access"),
        ("maintenance", "0024_auto_20231206_1627"),
        ("maintenance", "0025_remove_intervention_date"),
        ("maintenance", "0026_rename_subcontract_cost_intervention_contractor_cost"),
        ("maintenance", "0027_intervention_workforce_cost"),
        ("maintenance", "0028_intervention_contractors"),
        ("maintenance", "0029_remove_intervention_workforce_cost"),
    ]
    initial = True

    dependencies = [
        ("common", "0100_initial"),
        # ("infrastructure", "0100_initial"),
        ("authent", "0100_initial"),
        ("core", "0100_initial"),
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Contractor",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contractor",
                    models.CharField(max_length=128, verbose_name="Contractor"),
                ),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Contractor",
                "verbose_name_plural": "Contractors",
                "ordering": ["contractor"],
            },
        ),
        migrations.CreateModel(
            name="Funding",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.FloatField(verbose_name="Amount")),
                (
                    "organism",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.organism",
                        verbose_name="Organism",
                    ),
                ),
            ],
            options={
                "verbose_name": "Funding",
                "verbose_name_plural": "Fundings",
            },
            bases=(mapentity.models.DuplicateMixin, models.Model),
        ),
        migrations.CreateModel(
            name="Intervention",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                (
                    "deleted",
                    models.BooleanField(
                        default=False, editable=False, verbose_name="Deleted"
                    ),
                ),
                (
                    "geom_3d",
                    django.contrib.gis.db.models.fields.GeometryField(
                        default=None,
                        dim=3,
                        editable=False,
                        null=True,
                        spatial_index=False,
                        srid=settings.SRID,
                    ),
                ),
                (
                    "ascent",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        editable=False,
                        null=True,
                        verbose_name="Ascent",
                    ),
                ),
                (
                    "descent",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        editable=False,
                        null=True,
                        verbose_name="Descent",
                    ),
                ),
                (
                    "min_elevation",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        editable=False,
                        null=True,
                        verbose_name="Minimum elevation",
                    ),
                ),
                (
                    "max_elevation",
                    models.IntegerField(
                        blank=True,
                        default=0,
                        editable=False,
                        null=True,
                        verbose_name="Maximum elevation",
                    ),
                ),
                (
                    "slope",
                    models.FloatField(
                        blank=True,
                        default=0.0,
                        editable=False,
                        null=True,
                        verbose_name="Slope",
                    ),
                ),
                ("target_id", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "name",
                    models.CharField(
                        help_text="Brief summary", max_length=128, verbose_name="Name"
                    ),
                ),
                (
                    "begin_date",
                    models.DateField(
                        default=datetime.datetime.now, verbose_name="Begin date"
                    ),
                ),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="End date"),
                ),
                (
                    "subcontracting",
                    models.BooleanField(default=False, verbose_name="Subcontracting"),
                ),
                (
                    "width",
                    models.FloatField(
                        blank=True, default=0.0, null=True, verbose_name="Width"
                    ),
                ),
                (
                    "height",
                    models.FloatField(
                        blank=True, default=0.0, null=True, verbose_name="Height"
                    ),
                ),
                (
                    "area",
                    models.FloatField(
                        blank=True,
                        default=0,
                        editable=False,
                        null=True,
                        verbose_name="Area",
                    ),
                ),
                (
                    "material_cost",
                    models.FloatField(
                        blank=True, default=0.0, null=True, verbose_name="Material cost"
                    ),
                ),
                (
                    "heliport_cost",
                    models.FloatField(
                        blank=True, default=0.0, null=True, verbose_name="Heliport cost"
                    ),
                ),
                (
                    "contractor_cost",
                    models.FloatField(
                        blank=True,
                        default=0.0,
                        null=True,
                        verbose_name="Contractor cost",
                    ),
                ),
                (
                    "length",
                    models.FloatField(
                        blank=True, default=0.0, null=True, verbose_name="3D Length"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Remarks and notes",
                        verbose_name="Description",
                    ),
                ),
                (
                    "eid",
                    models.CharField(
                        blank=True,
                        max_length=1024,
                        null=True,
                        verbose_name="External id",
                    ),
                ),
                (
                    "access",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.accessmean",
                        verbose_name="Access mean",
                    ),
                ),
                (
                    "contractors",
                    models.ManyToManyField(
                        blank=True,
                        related_name="interventions",
                        to="maintenance.Contractor",
                        verbose_name="Contractors",
                    ),
                ),
            ],
            options={
                "verbose_name": "Intervention",
                "verbose_name_plural": "Interventions",
            },
            bases=(
                geotrek.zoning.mixins.ZoningPropertiesMixin,
                geotrek.common.mixins.models.AddPropertyMixin,
                mapentity.models.DuplicateMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="InterventionJob",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("job", models.CharField(max_length=128, verbose_name="Job")),
                (
                    "cost",
                    models.DecimalField(
                        decimal_places=2, default=1.0, max_digits=8, verbose_name="Cost"
                    ),
                ),
                ("active", models.BooleanField(default=True, verbose_name="Active")),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Intervention's job",
                "verbose_name_plural": "Intervention's jobs",
                "ordering": ["job"],
            },
        ),
        migrations.CreateModel(
            name="ProjectType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=128, verbose_name="Type")),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project type",
                "verbose_name_plural": "Project types",
                "ordering": ["type"],
            },
        ),
        migrations.CreateModel(
            name="ProjectDomain",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("domain", models.CharField(max_length=128, verbose_name="Domain")),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project domain",
                "verbose_name_plural": "Project domains",
                "ordering": ["domain"],
            },
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                (
                    "deleted",
                    models.BooleanField(
                        default=False, editable=False, verbose_name="Deleted"
                    ),
                ),
                ("name", models.CharField(max_length=128, verbose_name="Name")),
                ("begin_year", models.IntegerField(verbose_name="Begin year")),
                (
                    "end_year",
                    models.IntegerField(blank=True, null=True, verbose_name="End year"),
                ),
                (
                    "constraint",
                    models.TextField(
                        blank=True,
                        help_text="Specific conditions, ...",
                        verbose_name="Constraint",
                    ),
                ),
                (
                    "global_cost",
                    models.FloatField(
                        blank=True,
                        default=0,
                        help_text="€",
                        null=True,
                        verbose_name="Global cost",
                    ),
                ),
                (
                    "comments",
                    models.TextField(
                        blank=True,
                        help_text="Remarks and notes",
                        verbose_name="Comments",
                    ),
                ),
                (
                    "eid",
                    models.CharField(
                        blank=True,
                        max_length=1024,
                        null=True,
                        verbose_name="External id",
                    ),
                ),
                (
                    "contractors",
                    models.ManyToManyField(
                        blank=True,
                        related_name="projects",
                        to="maintenance.Contractor",
                        verbose_name="Contractors",
                    ),
                ),
                (
                    "domain",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="maintenance.projectdomain",
                        verbose_name="Domain",
                    ),
                ),
                (
                    "founders",
                    models.ManyToManyField(
                        through="maintenance.Funding",
                        to="common.Organism",
                        verbose_name="Founders",
                    ),
                ),
                (
                    "project_manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="manage",
                        to="common.organism",
                        verbose_name="Project manager",
                    ),
                ),
                (
                    "project_owner",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="own",
                        to="common.organism",
                        verbose_name="Project owner",
                    ),
                ),
                (
                    "structure",
                    models.ForeignKey(
                        default=geotrek.authent.models.default_structure_pk,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="maintenance.projecttype",
                        verbose_name="Type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Project",
                "verbose_name_plural": "Projects",
                "ordering": ["-begin_year", "name"],
            },
            bases=(
                geotrek.zoning.mixins.ZoningPropertiesMixin,
                geotrek.common.mixins.models.AddPropertyMixin,
                mapentity.models.DuplicateMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="ManDay",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "nb_days",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="Mandays"
                    ),
                ),
                (
                    "intervention",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="maintenance.intervention",
                    ),
                ),
                (
                    "job",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="maintenance.interventionjob",
                        verbose_name="Job",
                    ),
                ),
            ],
            options={
                "verbose_name": "Manday",
                "verbose_name_plural": "Mandays",
            },
            bases=(mapentity.models.DuplicateMixin, models.Model),
        ),
        migrations.CreateModel(
            name="InterventionType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=128, verbose_name="Type")),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Intervention's type",
                "verbose_name_plural": "Intervention's types",
                "ordering": ["type"],
            },
        ),
        migrations.CreateModel(
            name="InterventionStatus",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(max_length=128, verbose_name="Status")),
                (
                    "order",
                    models.PositiveSmallIntegerField(
                        blank=True,
                        default=None,
                        null=True,
                        verbose_name="Display order",
                    ),
                ),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Intervention's status",
                "verbose_name_plural": "Intervention's statuses",
                "ordering": ["order", "status"],
            },
        ),
        migrations.CreateModel(
            name="InterventionDisorder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("disorder", models.CharField(max_length=128, verbose_name="Disorder")),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Intervention's disorder",
                "verbose_name_plural": "Intervention's disorders",
                "ordering": ["disorder"],
            },
        ),
        migrations.AddField(
            model_name="intervention",
            name="disorders",
            field=models.ManyToManyField(
                blank=True,
                related_name="interventions",
                to="maintenance.InterventionDisorder",
                verbose_name="Disorders",
            ),
        ),
        migrations.AddField(
            model_name="intervention",
            name="jobs",
            field=models.ManyToManyField(
                through="maintenance.ManDay",
                to="maintenance.InterventionJob",
                verbose_name="Jobs",
            ),
        ),
        migrations.AddField(
            model_name="intervention",
            name="project",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="interventions",
                to="maintenance.project",
                verbose_name="Project",
            ),
        ),
        migrations.AddField(
            model_name="intervention",
            name="stake",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="interventions",
                to="core.stake",
                verbose_name="Stake",
            ),
        ),
        migrations.AddField(
            model_name="intervention",
            name="status",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="maintenance.interventionstatus",
                verbose_name="Status",
            ),
        ),
        migrations.AddField(
            model_name="intervention",
            name="structure",
            field=models.ForeignKey(
                default=geotrek.authent.models.default_structure_pk,
                on_delete=django.db.models.deletion.PROTECT,
                to="authent.structure",
                verbose_name="Related structure",
            ),
        ),
        migrations.AddField(
            model_name="intervention",
            name="target_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="intervention",
            name="type",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="maintenance.interventiontype",
                verbose_name="Type",
            ),
        ),
        migrations.AddField(
            model_name="funding",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="maintenance.project",
                verbose_name="Project",
            ),
        ),
        migrations.AddIndex(
            model_name="intervention",
            index=django.contrib.postgres.indexes.GistIndex(
                fields=["geom_3d"], name="intervention_geom_3d_gist_idx"
            ),
        ),
    ]
