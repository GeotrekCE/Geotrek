# Generated by Django 3.2.24 on 2024-03-08 11:23

from django.db import migrations, models
import django.db.models.deletion
import geotrek.authent.models
import geotrek.common.mixins.models
import geotrek.zoning.mixins
import mapentity.models


class Migration(migrations.Migration):
    replaces = [
        ("signage", "0001_initial"),
        ("signage", "0002_permissions_signage"),
        ("signage", "0003_verbose_blade_signage"),
        ("signage", "0004_attachments_signage"),
        ("signage", "0005_logentry_signage"),
        ("signage", "0006_auto_20190306_1555"),
        ("signage", "0007_auto_20190625_1848"),
        ("signage", "0008_auto_20190716_1411"),
        ("signage", "0009_auto_20191029_1110"),
        ("signage", "0010_auto_20200211_1011"),
        ("signage", "0011_auto_20200228_1755"),
        ("signage", "0012_auto_20200406_1411"),
        ("signage", "0013_auto_20200423_1255"),
        ("signage", "0014_auto_20200428_1459"),
        ("signage", "0015_auto_20200429_1208"),
        ("signage", "0016_auto_20200512_0805"),
        ("signage", "0017_auto_20200708_1455"),
        ("signage", "0018_auto_20200831_1406"),
        ("signage", "0019_auto_20201117_1302"),
        ("signage", "0020_auto_20210121_0943"),
        ("signage", "0021_auto_20210908_1306"),
        ("signage", "0022_auto_20220314_1048"),
        ("signage", "0023_auto_20220314_1441"),
        ("signage", "0024_signage_provider"),
        ("signage", "0025_blade_direction_optional"),
        ("signage", "0026_line_direction"),
        ("signage", "0027_auto_20221110_1128"),
        ("signage", "0028_auto_20230407_0947"),
        ("signage", "0029_auto_20230503_0837"),
        ("signage", "0030_auto_20230509_0816"),
        ("signage", "0031_signage_access"),
        ("signage", "0032_alter_line_text"),
        ("signage", "0033_auto_20230807_0831"),
        ("signage", "0034_migrate_pictogram"),
        ("signage", "0035_delete_pictogramname"),
        ("signage", "0036_auto_20231013_1326"),
        ("signage", "0037_auto_20231016_1331"),
        ("signage", "0038_auto_20231023_1233"),
        ("signage", "0039_alter_bladetype_options"),
        ("signage", "0040_signage_access_tmp"),
        ("signage", "0041_remove_signage_access"),
        ("signage", "0042_rename_access_tmp_signage_access"),
    ]
    initial = True

    dependencies = [
        ("common", "0100_initial"),
        ("authent", "0100_initial"),
        ("core", "0100_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Color",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                ("label", models.CharField(max_length=128)),
            ],
            options={
                "verbose_name": "Blade color",
                "verbose_name_plural": "Blade colors",
            },
        ),
        migrations.CreateModel(
            name="Direction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                ("label", models.CharField(max_length=128)),
            ],
            options={
                "verbose_name": "Direction",
                "verbose_name_plural": "Directions",
            },
        ),
        migrations.CreateModel(
            name="LinePictogram",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                (
                    "pictogram",
                    models.FileField(
                        blank=True,
                        max_length=512,
                        null=True,
                        upload_to="upload",
                        verbose_name="Pictogram",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        blank=True, default="", max_length=250, verbose_name="Label"
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True, default="", max_length=250, verbose_name="Code"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Complete description",
                        verbose_name="Description",
                    ),
                ),
            ],
            options={
                "verbose_name": "Line pictogram",
                "verbose_name_plural": "Line pictograms",
            },
        ),
        migrations.CreateModel(
            name="Sealing",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                ("label", models.CharField(max_length=250, verbose_name="Name")),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Sealing",
                "verbose_name_plural": "Sealings",
            },
        ),
        migrations.CreateModel(
            name="SignageType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                (
                    "pictogram",
                    models.FileField(
                        blank=True,
                        max_length=512,
                        null=True,
                        upload_to="upload",
                        verbose_name="Pictogram",
                    ),
                ),
                ("label", models.CharField(max_length=128)),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Signage Type",
                "verbose_name_plural": "Signage Types",
                "ordering": ("label",),
            },
        ),
        migrations.CreateModel(
            name="SignageCondition",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                ("label", models.CharField(max_length=250, verbose_name="Name")),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Signage Condition",
                "verbose_name_plural": "Signage Conditions",
                "ordering": ["label"],
            },
        ),
        migrations.CreateModel(
            name="Signage",
            fields=[
                (
                    "published",
                    models.BooleanField(
                        default=False,
                        help_text="Visible on Geotrek-rando",
                        verbose_name="Published",
                    ),
                ),
                (
                    "publication_date",
                    models.DateField(
                        blank=True,
                        editable=False,
                        null=True,
                        verbose_name="Publication date",
                    ),
                ),
                (
                    "topo_object",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="core.topology",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Reference, code, ...",
                        max_length=128,
                        verbose_name="Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Specificites", verbose_name="Description"
                    ),
                ),
                (
                    "implantation_year",
                    models.PositiveSmallIntegerField(
                        null=True, verbose_name="Implantation year"
                    ),
                ),
                (
                    "eid",
                    models.CharField(
                        blank=True,
                        max_length=1024,
                        null=True,
                        verbose_name="External id",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=1024,
                        verbose_name="Provider",
                    ),
                ),
                (
                    "code",
                    models.CharField(
                        blank=True, default="", max_length=250, verbose_name="Code"
                    ),
                ),
                (
                    "printed_elevation",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Printed elevation"
                    ),
                ),
                (
                    "access",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.accessmean",
                        verbose_name="Access mean",
                    ),
                ),
                (
                    "conditions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="signages",
                        to="signage.SignageCondition",
                        verbose_name="Condition",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="common.organism",
                        verbose_name="Manager",
                    ),
                ),
                (
                    "sealing",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="signage.sealing",
                        verbose_name="Sealing",
                    ),
                ),
                (
                    "structure",
                    models.ForeignKey(
                        default=geotrek.authent.models.default_structure_pk,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="signages",
                        to="signage.signagetype",
                        verbose_name="Type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Signage",
                "verbose_name_plural": "Signages",
            },
            bases=(mapentity.models.DuplicateMixin, "core.topology", models.Model),
        ),
        migrations.CreateModel(
            name="BladeType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                ("label", models.CharField(max_length=128)),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Blade type",
                "verbose_name_plural": "Blade types",
                "ordering": ("label",),
            },
        ),
        migrations.CreateModel(
            name="BladeCondition",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                ("label", models.CharField(max_length=250, verbose_name="Name")),
                (
                    "structure",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="authent.structure",
                        verbose_name="Related structure",
                    ),
                ),
            ],
            options={
                "verbose_name": "Blade Condition",
                "verbose_name_plural": "Blade Conditions",
                "ordering": ("label",),
            },
        ),
        migrations.CreateModel(
            name="Blade",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "date_insert",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="Insertion date"
                    ),
                ),
                (
                    "date_update",
                    models.DateTimeField(
                        auto_now=True, db_index=True, verbose_name="Update date"
                    ),
                ),
                (
                    "deleted",
                    models.BooleanField(
                        default=False, editable=False, verbose_name="Deleted"
                    ),
                ),
                ("number", models.CharField(max_length=250, verbose_name="Number")),
                (
                    "color",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="signage.color",
                        verbose_name="Color",
                    ),
                ),
                (
                    "conditions",
                    models.ManyToManyField(
                        blank=True,
                        related_name="blades",
                        to="signage.BladeCondition",
                        verbose_name="Condition",
                    ),
                ),
                (
                    "direction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="signage.direction",
                        verbose_name="Direction",
                    ),
                ),
                (
                    "signage",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="signage.signage",
                        verbose_name="Signage",
                    ),
                ),
                (
                    "topology",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blades_set",
                        to="core.topology",
                        verbose_name="Blades",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="signage.bladetype",
                        verbose_name="Type",
                    ),
                ),
            ],
            options={
                "verbose_name": "Blade",
                "verbose_name_plural": "Blades",
            },
            bases=(
                geotrek.zoning.mixins.ZoningPropertiesMixin,
                geotrek.common.mixins.models.AddPropertyMixin,
                mapentity.models.DuplicateMixin,
                models.Model,
            ),
        ),
        migrations.CreateModel(
            name="Line",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.IntegerField(verbose_name="Number")),
                (
                    "text",
                    models.CharField(
                        blank=True, default="", max_length=1000, verbose_name="Text"
                    ),
                ),
                (
                    "distance",
                    models.DecimalField(
                        blank=True,
                        decimal_places=1,
                        help_text="km",
                        max_digits=8,
                        null=True,
                        verbose_name="Distance",
                    ),
                ),
                (
                    "time",
                    models.DurationField(
                        blank=True,
                        help_text="Hours:Minutes:Seconds",
                        null=True,
                        verbose_name="Time",
                    ),
                ),
                (
                    "blade",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lines",
                        to="signage.blade",
                        verbose_name="Blade",
                    ),
                ),
                (
                    "direction",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="signage.direction",
                        verbose_name="Direction",
                    ),
                ),
                (
                    "pictograms",
                    models.ManyToManyField(
                        blank=True,
                        related_name="lines",
                        to="signage.LinePictogram",
                        verbose_name="Pictograms",
                    ),
                ),
            ],
            options={
                "verbose_name": "Line",
                "verbose_name_plural": "Lines",
                "unique_together": {("blade", "number")},
            },
        ),
    ]
