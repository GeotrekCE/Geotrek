language: python
python:
  - "2.7"
env:
  - ACTION=test
  - ACTION=deploy
  - ACTION=integration
  - ACTION=codestyle


matrix:
  allow_failures:
    - env: ACTION=integration


cache:
  - apt

dist: trusty
sudo: required

before_install:
  # Fix postgresql / postgis for travis trusty
  - echo $PATH
  - sudo apt-get update -qq
  - sudo apt-get install -y -qq unoconv inkscape
  - sudo apt-get remove postgis*
  - sudo apt-get remove postgresql*
  - sudo rm -rf /usr/local/bin/phantomjs*
  - sudo rm -rf /usr/bin/phantomjs*
  - sudo rm -rf /usr/local/phantomjs*

  # Download bundle of python eggs, and use it as download cache
  - mkdir -p $HOME/.buildout/downloads
  - echo -e "[buildout]\ndownload-cache=$HOME/.buildout/downloads" > $HOME/.buildout/default.cfg
  - "wget http://prod-geotrek-fr.makina-corpus.net/media/upload/geotrek-bundle.tar.gz -O /tmp/geotrek-bundle.tar.gz || true"
  - "tar -zxf /tmp/geotrek-bundle.tar.gz --directory=$HOME || true"
  - make etc/settings.ini

  # Enable experimental features during navigation tests
  - sed -i "s/experimental = False/experimental = True/" etc/settings.ini

install:
  - if [[ $ACTION != codestyle ]]; then deactivate; fi
  - if [[ $ACTION == codestyle ]]; then pip install flake8; fi
  - if [[ $ACTION == test ]]; then ./install.sh --tests || (cat ./install.log; false); fi
  - if [[ $ACTION == deploy || $ACTION == integration ]]; then ./install.sh --noinput || (cat ./install.log; false); fi
script:
  - if [[ $ACTION == codestyle ]]; then flake8 --exclude "" --ignore=E501,F403,F405 geotrek/settings; fi
  - if [[ $ACTION == codestyle ]]; then flake8 geotrek; fi
  - if [[ $ACTION == codestyle ]]; then find geotrek/*/migrations/*.py | xargs grep -l srid | xargs grep -L SRID; fi
  - if [[ $ACTION == deploy || $ACTION == integration ]]; then make load_demo; fi
  - if [[ $ACTION == deploy ]]; then make test_nav host=localhost port=80; fi
  - if [[ $ACTION == integration ]]; then make test_export host=localhost port=80; fi
  - if [[ $ACTION == test ]]; then make env_test test; fi
  - if [[ $ACTION == test ]]; then make test_js; fi
  # Re-run for coverage
  - if [[ $ACTION == test ]]; then rm -rf ./var/cache/* ./var/media/maps/*; fi
  - if [[ $ACTION == test ]]; then ./bin/coverage run ./bin/django test geotrek; fi
after_success:
  # Report coverage results to coveralls.io
  - if [[ $ACTION == test ]]; then ./bin/coverage report -m; fi
  - if [[ $ACTION == test ]]; then sudo pip install coveralls; fi
  - if [[ $ACTION == test ]]; then coveralls; fi

after_failure:
  - cat install.log
  - cat var/log/geotrek.log
  - cat var/log/nginx-access.log
  - cat var/log/nginx-error.log
  - cat var/log/supervisord.log

#notifications:
  #irc: "irc.freenode.org#geotrek"
