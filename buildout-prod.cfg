[buildout]
extends = 
    buildout.cfg

parts +=
    nginx-conf
    gunicorn
    gunicorn-app-conf
    gunicorn-api-conf
    tilecache-conf
    gunicorn-tilecache-conf
    convertit-conf
    gunicorn-convertit-conf
    logrotate-conf
    logrotate-daily
    supervisor
    supervisor-conf

eggs +=
    convertit
    gunicorn
    tilecache
    Paste

[django]
staticroot = ${buildout:directory}/var/static
staticurl = /static
mediaurl = /media
eggs +=
    python-memcached
extra-settings +=
    #
    #  Django Production
    #..........................
    
    DEBUG = False
    TEMPLATE_DEBUG = False
    
    ALLOWED_HOST = ['${settings:host}', '${settings:host}.']
    
    TEMP_DIR = '${buildout:directory}/var/tmp/'
    MEDIA_URL = '${settings:rooturl}${django:mediaurl}/'
    STATIC_ROOT = '${django:staticroot}'
    STATIC_URL = '${settings:rooturl}${django:staticurl}/'
    ADMIN_MEDIA_PREFIX = '%s/static/admin/' % ROOT_URL
    
    FORCE_SCRIPT_NAME = '${settings:rooturl}'
    USE_X_FORWARDED_HOST = True

    CONVERSION_SERVER = '${settings:rooturl}/convert'
    
    COMPRESSOR_ENABLED = True
    
    INSTALLED_APPS += (
        'gunicorn',
    )
    
    CACHES['default']['BACKEND'] = 'django.core.cache.backends.memcached.MemcachedCache'
    CACHES['default']['LOCATION'] = '127.0.0.1:11211'
    CACHES['default']['TIMEOUT'] = ${settings:cachetimeout}
    
    #
    #  Email settings
    #..........................
    
    ADMINS = (
        ('Admin %s' % TITLE, '${settings:mailadmin}'),
    )
    MANAGERS = ADMINS
    EMAIL_SUBJECT_PREFIX = '[%s] ' % TITLE
    DEFAULT_FROM_EMAIL = '${settings:mailfrom}' or '${settings:mailadmin}'
    SERVER_EMAIL = DEFAULT_FROM_EMAIL
    EMAIL_HOST = '${settings:mailhost}'
    EMAIL_HOST_USER = '${settings:mailuser}'
    EMAIL_HOST_PASSWORD = '${settings:mailpassword}'
    EMAIL_HOST_PORT = '${settings:mailport}'
    EMAIL_USE_TLS = ${settings:mailtls}
    
    #
    #  External authent
    #..........................
    
    AUTHENT_DATABASE = '${settings:authent_dbname}' or 'authentdb'
    AUTHENT_TABLENAME = '${settings:authent_tablename}' or None
    if AUTHENT_TABLENAME: AUTHENTICATION_BACKENDS=('geotrek.authent.backend.DatabaseBackend',)
    
    DATABASES[AUTHENT_DATABASE] = {}
    DATABASES[AUTHENT_DATABASE]['ENGINE'] = 'django.db.backends.${settings:authent_engine}'
    DATABASES[AUTHENT_DATABASE]['NAME'] = AUTHENT_DATABASE
    DATABASES[AUTHENT_DATABASE]['USER'] = '${settings:authent_dbuser}'
    DATABASES[AUTHENT_DATABASE]['PASSWORD'] = '${settings:authent_dbpassword}'
    DATABASES[AUTHENT_DATABASE]['HOST'] = '${settings:authent_dbhost}'
    DATABASES[AUTHENT_DATABASE]['PORT'] = '${settings:authent_dbport}'

    #
    #  Overidden settings
    #..........................
    from settings_production import *

[mkdirs]
paths += ${buildout:directory}/var/log/
         ${buildout:directory}/var/run/
         ${buildout:directory}/var/tmp/
         ${tilecache-conf:cachedir}
         ${buildout:directory}/etc/init
         ${django:staticroot}
         ${convertit-conf:download_dir}
         ${convertit-conf:converted_dir}

[gunicorn]
recipe = zc.recipe.egg
scripts = gunicorn_django
          gunicorn_paster
          gunicorn
eggs = ${buildout:eggs}
       PasteDeploy
extra-paths = ${buildout:extra-paths}
entry-points = gunicorn_django=gunicorn.app.djangoapp:run

[gunicorn-app-conf]
recipe = collective.recipe.genshi
workers = 4
timeout = 30
bind = unix:${buildout:directory}/var/run/gunicorn-${django:project}.sock
pidfile = ${buildout:directory}/var/run/gunicorn-${django:project}.pid
errorlog = ${buildout:directory}/var/log/gunicorn-${django:project}.log
input = ${buildout:directory}/conf/gunicorn.conf.in
output = ${buildout:directory}/etc/gunicorn-${django:project}.conf

[gunicorn-api-conf]
recipe = collective.recipe.genshi
workers = 4
timeout = 300
bind = unix:${buildout:directory}/var/run/gunicorn-${django:project}_api.sock
pidfile = ${buildout:directory}/var/run/gunicorn-${django:project}_api.pid
errorlog = ${buildout:directory}/var/log/gunicorn-${django:project}.log
input = ${buildout:directory}/conf/gunicorn.conf.in
output = ${buildout:directory}/etc/gunicorn-${django:project}_api.conf

[gunicorn-tilecache-conf]
recipe = collective.recipe.genshi
workers = 6
timeout = 10
bind = unix:${buildout:directory}/var/run/gunicorn-tilecache.sock
pidfile = ${buildout:directory}/var/run/gunicorn-tilecache.pid
errorlog = ${buildout:directory}/var/log/gunicorn-tilecache.log
input = ${buildout:directory}/conf/gunicorn.conf.in
output = ${buildout:directory}/etc/gunicorn-tilecache.conf

[tilecache-conf]
recipe = collective.recipe.genshi
cachedir = ${buildout:directory}/var/tiles
input = ${buildout:directory}/conf/tilecache.cfg.in
output = ${buildout:directory}/etc/tilecache.cfg

[gunicorn-convertit-conf]
recipe = collective.recipe.genshi
workers = 4
timeout = 30
bind = unix:${buildout:directory}/var/run/gunicorn-convertit.sock
pidfile = ${buildout:directory}/var/run/gunicorn-convertit.pid
errorlog = ${buildout:directory}/var/log/gunicorn-convertit.log
input = ${buildout:directory}/conf/gunicorn.conf.in
output = ${buildout:directory}/etc/gunicorn-convertit.conf

[convertit-conf]
recipe = collective.recipe.genshi
download_dir = ${django:mediaroot}/convertit/download
converted_dir = ${django:mediaroot}/convertit/converted
host = 0.0.0.0
port = 8001
input = ${buildout:directory}/conf/convertit.cfg.in
output = ${buildout:directory}/etc/convertit.cfg

[nginx-conf]
recipe = collective.recipe.genshi
port = 80
input = ${buildout:directory}/conf/nginx.conf.in
output = ${buildout:directory}/etc/nginx.conf
expiretime = 1d
cache = False
cachename = one
cachetime = 1d
errorlog = ${buildout:directory}/var/log/nginx-error.log
accesslog = ${buildout:directory}/var/log/nginx-access.log

[logrotate-conf]
recipe = collective.recipe.genshi
input = ${buildout:directory}/conf/logrotate.conf.in
output = ${buildout:directory}/etc/logrotate.conf

[logrotate-daily]
recipe = z3c.recipe.usercrontab
times = 0 6 * * *
command = /usr/sbin/logrotate --state ${buildout:directory}/var/run/logrotate.status ${buildout:directory}/etc/logrotate.conf

[supervisor]
recipe = collective.recipe.supervisor
supervisord-conf = ${buildout:directory}/etc/supervisord.conf
pidfile = ${buildout:directory}/var/run/supervisord.pid
logfile = ${buildout:directory}/var/log/supervisord.log
childlogdir = ${buildout:directory}/var/log
nodaemon = true
programs =
# Priority means order of start/shutdown
    20 ${django:project} (stdout_logfile=${buildout:directory}/var/log/${django:project}.log stderr_logfile=${buildout:directory}/var/log/${django:project}.log) ${buildout:directory}/bin/django [run_gunicorn --config=${gunicorn-app-conf:output}] ${buildout:directory}/etc true
    20 ${django:project}_api (stdout_logfile=${buildout:directory}/var/log/${django:project}.log stderr_logfile=${buildout:directory}/var/log/${django:project}.log) ${buildout:directory}/bin/django [run_gunicorn --config=${gunicorn-api-conf:output}] ${buildout:directory}/etc true
    30 tilecache (stdout_logfile=${buildout:directory}/var/log/tilecache.log stderr_logfile=${buildout:directory}/var/log/tilecache.log) ${buildout:directory}/bin/gunicorn [-c ${gunicorn-tilecache-conf:output} TileCache:wsgiApp] ${buildout:directory}/etc true
    40 convertit (stdout_logfile=${buildout:directory}/var/log/convertit.log stderr_logfile=${buildout:directory}/var/log/convertit.log) ${buildout:directory}/bin/gunicorn_paster [-c ${gunicorn-convertit-conf:output} ${convertit-conf:output}] ${buildout:directory}/etc true

[supervisor-conf]
recipe = collective.recipe.genshi
input = ${buildout:directory}/conf/supervisor.conf.in
output = ${buildout:directory}/etc/init/supervisor.conf

[versions]
collective.recipe.supervisor = 0.18
collective.recipe.genshi = 1.0
collective.recipe.template = 1.9
Genshi = 0.6
supervisor = 3.0a12
meld3 = 0.6.8
gunicorn = 0.14.2
z3c.recipe.usercrontab = 1.1
tilecache = 2.11
python-memcached = 1.51